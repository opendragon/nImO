{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf460
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww24540\viewh16020\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs28 \cf0 \expnd0\expndtw0\kerning0
Three kinds of data -\
1) Signed integer\
2) 64-bit floating point\
3) Character string / binary blob\
4) Structures\
\
Lead byte:\
bit0..1\
	00 signed integer [Enumerable] \{0x00\}\
                bit2=0 short value\
                      bit3..7 (-16..15) [bit 3 is the sign bit]\
                bit2=1 long value \{0x20\}\
                      bit3..4 Reserved (set to zero)\
                      bit5..7 number of bytes to follow-1 (1..8), MSB-first, sign extended from first byte [bit 0 of the first byte is the sign bit]\
	01 floating-point (double) [Not Enumerable] \{0x40\}\
                bit2=0 short count-1 of floating-point values to follow\
                      bit3..7 (1..32)\
                bit2=1 long count-1 of floating-point values in next byte(s) \{0x20\}\
                      bit3..4 Reserved (set to zero)\
                      bit5..7 number of bytes for count-1 (1..8) [floating-point values (double) are MSB-first]\
        10 string [Enumerable] / blob [Not Enumerable] \{0x80\}\
                bit2=0 string\
                bit2=1 blob \{0x20\}\
                bit3=0 short length\
                      bit4..7 (0..15) not NULL-terminated\
                bit3=1 long length in next byte(s) \{0x10\}\
                      bit4 Reserved (set to zero)\
                      bit5..7 number of bytes for length-1 (1..8)\
        11 other \{0xC0\}\
                bit2..3\
                       00 boolean [Enumerable]\
                             bit4..6 Reserved (set to zero)\
                             bit7=0 False\
                             bit7=1 True\
                       01 start of container (sequence of values) [Not Enumerable] \{0x10\}\
                             bit4..5\
                                    00 array\
                                    01 map \{0x04\} [key/value pairs follow, in key order]\
                                    10 set \{0x08\}\
                                    11 Reserved \{0x0C\}\
                             bit6 Reserved (set to zero)\
                             bit7=0 Empty\
                             bit7=1 Non-empty, number of elements-17 follows, as signed integer \{0x01\}; note that the value is offset by -17 as negative counts are not possible\
                       10 end of container (sequence of values) \{0x20\}\
                             bit4..5\
                                    00 array\
                                    01 map \{0x04\}\
                                    10 set \{0x08\}\
                                    11 Reserved \{0x0C\}\
                             bit6 Reserved (set to zero)\
                             bit7=0 Empty\
                             bit7=1 Non-empty \{0x01\}\
                       11 start/end message \{0x30\}\
                             bit4=0 start of message\
                             bit4=1 end of message \{0x08\}\
                             bit5=0 Empty\
                             bit5=1 Non-empty \{0x04\}\
                             bit6..7 expected first/last value in message if non-empty [top two bits of value type]\
\
note that there is no explicit restriction on the elements; for a map, the elements are expected to be a key / value pair, with the key being an Enumerable, but the format does not add this as a constraint\
the start / end of container entries are used for validation\
\
Examples - [octal]\
SME is 11110xyy [036z] (x=0 for empty message, x=1 for non-empty message, yy=value type of first part of message)\
EME is 11111xyy [037z]\
SAR is 1101000x [032z] (x=0 for empty array, x=1 for non-empty array, element count follows) \
EAR is 1110000x [034z]\
SMA is 1101010x [032z] (x=0 for empty map, x=1 for non-empty map, element count follows)\
EMA is 1110010x [034z]\
SSE is 1101100x [033z] (x=0 for empty set, x=1 for non-empty set, element count follows)\
ESE is 1110100x [035z]\
False is 11000000 [0300]\
True is 11000001 [0301]\
0 is 00000000 [0000]\
13 is 00001101 [0015]\
-13 is 00010011 [0023]\
144 is 00100001 [0041] 00000000 [0000] 10010000 [0220]\
-144 is 00100001 [0041] 11111111 [0377] 01110000 [0160]\
1.23 2.34 4.56 is 01000010 [0102] fd(1.23) fd(2.34) fd(4.56), where fd(x) is the binary representation of the double value x\
"" is 10000000 [0200]\
"abc" is 1000 0011 b('a') b('b') b('c'), where b(x) is the binary representation of the character x\
"abcde abcde abcde abcde abcde abcde " is 10010000 [0220] 00100100 [0044] b('a') b('b') b('c') b('d') b('e') b(' ') \'85 b('e') b(' ')\
}