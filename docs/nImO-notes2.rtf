{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 Courier;\f1\fmodern\fcharset0 Courier-Bold;\f2\fmodern\fcharset0 Courier-Oblique;
\f3\fswiss\fcharset0 Helvetica-Bold;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c100000\c100000\c100000;}
\margl1440\margr1440\vieww26160\viewh18280\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 it appears that both a TCP and a UDP socket can be opened with the same port\
\
tools:\
* [nImObridge 'a' 'b' \'97 routing between networks; 'a' is the name of this network, 'b' is the address to connect to the other]\
* nImOconnect 'c' 'd' ['m'] \'97 connects channel 'c' to channel 'd' with transport 'm' (TCP or UDP [or UDT]) [only one connection allowed between 'c' and 'd'] 
\f1\b DONE
\f0\b0 \
* nImOdisconnect 'c' 'd' \'97 removes connection from channel 'c' to channel d' 
\f1\b DONE\

\f0\b0 * nImOlaunch [ 'a' [ 'b' ]] - launches a service via a launcher 
\f1\b DONE
\f0\b0 \
* nImOlist xyz \'97 reports all the known nodes, channels, connections, bridges, machines, applications depending on filters and options 
\f1\b DONE
\f0\b0 \
* nImOmonitor - displays the log; 
\f1\b DONE
\f0\b0 \
* nImOpost 'a' 'b' - writes text to the log; 
\f1\b DONE
\f0\b0 \
* nImOread 'c' \'97 writes out the string representation of messages received on channel 'c' 
\f1\b DONE
\f0\b0 \
* nImOversion \'97 reports the versions of the libraries; 
\f1\b DONE
\f0\b0 \
* nImOwrite 'c' \'97 reads the string representation of a message and sends it out channel 'c' 
\f1\b DONE\

\f0\b0 \
examples:\
* nImOricochet 'p' - forwards a message to the next machine in a list [uses unfiltered InChannels]\
* nImOricochetControl 'r' 'p' - creates a machine list and sends it to one of the machines ('r' indicates whether random or sequential machine order) [uses unfiltered inChannels]\
\
wiring:\
* nImOcommutator ['n' ['r']] - forwards a message to one of 'n' output channels (default 1), sequentially if 'r' is missing or false, randomly if true [default false] 
\f1\b DONE
\f0\b0 \
* nImOdelay ['d'] - forwards any message from the input channel to the output channel after a delay of 'd' seconds ('d' defaults to 1) 
\f1\b DONE
\f0\b0 \
* nImOfanIn ['n'] - forwards any messages from one of the 'n' input channels to the output channel ('n' defaults to 1) 
\f1\b DONE
\f0\b0 \
* nImOfanOut ['n'] - forwards a message from the input channel to all of the 'n' output channels ('n' defaults to 1) 
\f1\b DONE
\f0\b0 \
* nImOjunction ['n' ['m']] - forwards any messages from one of the 'n' input channels to all of the 'm' output channels ('n' and 'm' default to 1) 
\f1\b DONE
\f0\b0 \
* nImOpassthrough - forwards any message from the input channel to the output channel, allowing for changing channel data types 
\f1\b DONE
\f0\b0 \
\
application support:\
* nImOaddApp 'a' - adds an application to the list of available applications on the machine\
* nImOremoveApp 'a' - removes an application from the list of available applications on the machine\
* nImOloadApps 'a' - loads a set of applications\
* nImOloadSetup 'a' - loads a setup\
* nImOshutdown 'a' - shutdown one or all nodes or machines except active monitors 
\f1\b DONE
\f0\b0 \
* nImOstoreApps 'a' - stores the current set of loaded applications\
* nImOstoreSetup 'a' - stores a setup\
* nImOlauncher 'a' - records the machine and known applications with the Registry and waits for requests to start applications 
\f1\b DONE
\f0\b0 \
* nImOregistry - the Registry, one per LAN 
\f1\b DONE
\f0\b0 \
\
shell script:\
* nimo\
	provides a 'simplified' command-line interface to some of the executables, using the default options \
		nimo add <a> - invokes nImOaddApp <a>\
		nimo bridge <a> <b> - invokes nImObridge <a> <b>\
		nimo connect <c> <d> <m> - invokes nImOconnect <c> <d> <m>\
		nimo disconnect <c> <d> - invokes nImOdisconnect <c> <d>\
		nimo help - lists choices\
		nimo launch <a> <b> - invokes nImOlaunch <a> <b>\
		nimo list <type> - invokes nImOlist <type>; with no <type>, lists choices\
		nimo loada <a> - invokes nImOloadApps <a>\
		nimo loads <a> - invokes nImOloadSetup <a>\
		nimo monitor - invokes nImOmonitor\
		nimo post <a> <b> - invokes nImOport <a> <b>\
		nimo read <c> - invokes nImOread <c>\
		nimo remove <a> - invokes nImOremoveApp <a>\
		nimo shutdown <a> - invokes nImOshutdown <a>\
		nimo storea <a> - invokes nImOstoreApps <a>\
		nimo stores <a> - invokes nImOstoreSetup <a>\
		nimo update <a> - invokes nImOupdateApp <a>\
		nimo version - invokes nImOversion\
		nimo write <c> - invokes nImOwrite <c>\
\
>> 
\f2\i improve the 'one-line' descriptions for the applications
\f0\i0 .\
\
\pard\pardeftab720\sl360\partightenfactor0

\f3\b \cf2 \cb3 \expnd0\expndtw0\kerning0
fix CMakeLists.txt to use current SWIG commands; check what languages can be generated - currently Python and C#
\f0\b0 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
}