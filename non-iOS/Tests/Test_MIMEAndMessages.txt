#--------------------------------------------------------------------------------------------------
#
#  File:       non-iOS/Tests/Test_MIMEAndMessages.txt
#
#  Project:    nImO
#
#  Contains:   The CMAKE definitions for the unit test application.
#
#  Written by: Norman Jaffe
#
#  Copyright:  (c) 2022 by OpenDragon.
#
#              All rights reserved. Redistribution and use in source and binary forms, with or
#              without modification, are permitted provided that the following conditions are met:
#                * Redistributions of source code must retain the above copyright notice, this list
#                  of conditions and the following disclaimer.
#                * Redistributions in binary form must reproduce the above copyright notice, this
#                  list of conditions and the following disclaimer in the documentation and / or
#                  other materials provided with the distribution.
#                * Neither the name of the copyright holders nor the names of its contributors may
#                  be used to endorse or promote products derived from this software without
#                  specific prior written permission.
#
#              THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
#              EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
#              OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
#              SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
#              INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
#              TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
#              BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#              CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
#              ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
#              DAMAGE.
#
#  Created:    2022-12-05
#
#--------------------------------------------------------------------------------------------------

set(THIS_TARGET nImOMIMEAndMessagesTest)

if(WIN32)
    set(VERS_RESOURCE ${THIS_TARGET}.rc)
else()
    set(VERS_RESOURCE "")
endif()

configure_file(${THIS_SOURCE_DIR}/${THIS_TARGET}.rc.in ${THIS_TARGET}.rc)

#add_library(nImOcommonTestSupport)

enable_testing()

add_executable(${THIS_TARGET}
                ${THIS_SOURCE_DIR}/nImOMIMEAndMessagesTest.cpp
                ${VERS_RESOURCE})

# Note that the order of inclusion of libraries is critical in Linux, as they appear to only be
# processed once.
#target_link_libraries(${THIS_TARGET} nImOcommonTestSupport ${nImO_LINK_LIBRARIES})
target_link_libraries(${THIS_TARGET} ${nImO_LINK_LIBRARIES})

fix_dynamic_libs(${THIS_TARGET})

# Test empty message
add_test(NAME TestMIMEInsertEmptyMessage COMMAND ${THIS_TARGET} 1)
# Test empty message
add_test(NAME TestMIMEExtractEmptyMessage COMMAND ${THIS_TARGET} 2)
# Test message with logical
add_test(NAME TestMIMEInsertLogicalMessage COMMAND ${THIS_TARGET} 3)
# Test message with logical
add_test(NAME TestMIMEExtractLogicalMessage COMMAND ${THIS_TARGET} 4)
# Test message with tiny integer
add_test(NAME TestMIMEInsertTinyIntegerMessage COMMAND ${THIS_TARGET} 5)
# Test message with tiny integer
add_test(NAME TestMIMEExtractTinyIntegerMessage COMMAND ${THIS_TARGET} 6)
# Test message with short integer
add_test(NAME TestMIMEInsertSmallIntegerMessage COMMAND ${THIS_TARGET} 7)
# Test message with short integer
add_test(NAME TestMIMEExtractSmallIntegerMessage COMMAND ${THIS_TARGET} 8)
# Test message with medium integer
add_test(NAME TestMIMEInsertMediumIntegerMessage COMMAND ${THIS_TARGET} 9)
# Test message with medium integer
add_test(NAME TestMIMEExtractMediumIntegerMessage COMMAND ${THIS_TARGET} 10)
# Test message with big integer
add_test(NAME TestMIMEInsertBigIntegerMessage COMMAND ${THIS_TARGET} 11)
# Test message with big integer
add_test(NAME TestMIMEExtractBigIntegerMessage COMMAND ${THIS_TARGET} 12)
# Test message with empty string
add_test(NAME TestMIMEInsertEmptyStringMessage COMMAND ${THIS_TARGET} 13)
# Test message with empty string
add_test(NAME TestMIMEExtractEmptyStringMessage COMMAND ${THIS_TARGET} 14)
# Test message with short string
add_test(NAME TestMIMEInsertShortStringMessage COMMAND ${THIS_TARGET} 15)
# Test message with short string
add_test(NAME TestMIMEExtractShortStringMessage COMMAND ${THIS_TARGET} 16)
# Test message with medium string
add_test(NAME TestMIMEInsertMediumStringMessage COMMAND ${THIS_TARGET} 17)
# Test message with medium string
add_test(NAME TestMIMEExtractMediumStringMessage COMMAND ${THIS_TARGET} 18)
# Test message with empty blob
add_test(NAME TestMIMEInsertEmptyBlobMessage COMMAND ${THIS_TARGET} 19)
# Test message with empty blob
add_test(NAME TestMIMEExtractEmptyBlobMessage COMMAND ${THIS_TARGET} 20)
# Test message with short blob
add_test(NAME TestMIMEInsertSmallBlobMessage COMMAND ${THIS_TARGET} 21)
# Test message with short blob
add_test(NAME TestMIMEExtractSmallBlobMessage COMMAND ${THIS_TARGET} 22)
# Test message with medium blob
add_test(NAME TestMIMEInsertMediumBlobMessage COMMAND ${THIS_TARGET} 23)
# Test message with medium blob
add_test(NAME TestMIMEExtractMediumBlobMessage COMMAND ${THIS_TARGET} 24)
# Test message with single double
add_test(NAME TestMIMEInsertSingleDoubleMessage COMMAND ${THIS_TARGET} 25)
# Test message with single double
add_test(NAME TestMIMEExtractSingleDoubleMessage COMMAND ${THIS_TARGET} 26)

# Test message with empty array
add_test(NAME TestMIMEInsertEmptyArrayMessage COMMAND ${THIS_TARGET} 100)
# Test message with empty array
add_test(NAME TestMIMEExtractEmptyArrayMessage COMMAND ${THIS_TARGET} 101)
# Test message with empty map
add_test(NAME TestMIMEInsertEmptyMapMessage COMMAND ${THIS_TARGET} 102)
# Test message with empty map
add_test(NAME TestMIMEExtractEmptyMapMessage COMMAND ${THIS_TARGET} 103)
# Test message with empty set
add_test(NAME TestMIMEInsertEmptySetMessage COMMAND ${THIS_TARGET} 104)
# Test message with empty set
add_test(NAME TestMIMEExtractEmptySetMessage COMMAND ${THIS_TARGET} 105)

# Test message with array with one logical
add_test(NAME TestMIMEInsertArrayWithOneLogicalMessage COMMAND ${THIS_TARGET} 200)
# Test message with array with one logical
add_test(NAME TestMIMEExtractArrayWithOneLogicalMessage COMMAND ${THIS_TARGET} 201)
# Test message with array with one integer
add_test(NAME TestMIMEInsertArrayWithOneIntegerMessage COMMAND ${THIS_TARGET} 202)
# Test message with array with one integer
add_test(NAME TestMIMEExtractArrayWithOneIntegerMessage COMMAND ${THIS_TARGET} 203)
# Test message with array with one double
add_test(NAME TestMIMEInsertArrayWithOneDoubleMessage COMMAND ${THIS_TARGET} 204)
# Test message with array with one double
add_test(NAME TestMIMEExtractArrayWithOneDoubleMessage COMMAND ${THIS_TARGET} 205)
# Test message with array with one string
add_test(NAME TestMIMEInsertArrayWithOneStringMessage COMMAND ${THIS_TARGET} 206)
# Test message with array with one string
add_test(NAME TestMIMEExtractArrayWithOneStringMessage COMMAND ${THIS_TARGET} 207)
# Test message with array with one blob
add_test(NAME TestMIMEInsertArrayWithOneBlobMessage COMMAND ${THIS_TARGET} 208)
# Test message with array with one blob
add_test(NAME TestMIMEExtractArrayWithOneBlobMessage COMMAND ${THIS_TARGET} 209)
# Test message with array with one empty array
add_test(NAME TestMIMEInsertArrayWithOneEmptyArrayMessage COMMAND ${THIS_TARGET} 210)
# Test message with array with one empty array
add_test(NAME TestMIMEExtractArrayWithOneEmptyArrayMessage COMMAND ${THIS_TARGET} 211)
# Test message with array with one empty map
add_test(NAME TestMIMEInsertArrayWithOneEmptyMapMessage COMMAND ${THIS_TARGET} 212)
# Test message with array with one empty map
add_test(NAME TestMIMEExtractArrayWithOneEmptyMapMessage COMMAND ${THIS_TARGET} 213)
# Test message with array with one empty set
add_test(NAME TestMIMEInsertArrayWithOneEmptySetMessage COMMAND ${THIS_TARGET} 214)
# Test message with array with one empty set
add_test(NAME TestMIMEExtractArrayWithOneEmptySetMessage COMMAND ${THIS_TARGET} 215)

# Test message with array with two logicals
add_test(NAME TestMIMEInsertArrayWithTwoLogicalsMessage COMMAND ${THIS_TARGET} 300)
# Test message with array with two logicals
add_test(NAME TestMIMEExtractArrayWithTwoLogicalsMessage COMMAND ${THIS_TARGET} 301)
# Test message with array with two integers
add_test(NAME TestMIMEInsertArrayWithTwoIntegersMessage COMMAND ${THIS_TARGET} 302)
# Test message with array with two integers
add_test(NAME TestMIMEExtractArrayWithTwoIntegersMessage COMMAND ${THIS_TARGET} 303)
# Test message with array with two doubles
add_test(NAME TestMIMEInsertArrayWithTwoDoublesMessage COMMAND ${THIS_TARGET} 304)
# Test message with array with two doubles
add_test(NAME TestMIMEExtractArrayWithTwoDoublesMessage COMMAND ${THIS_TARGET} 305)
# Test message with array with two strings
add_test(NAME TestMIMEInsertArrayWithTwoStringsMessage COMMAND ${THIS_TARGET} 306)
# Test message with array with two strings
add_test(NAME TestMIMEExtractArrayWithTwoStringsMessage COMMAND ${THIS_TARGET} 307)
# Test message with array with two blobs
add_test(NAME TestMIMEInsertArrayWithTwoBlobsMessage COMMAND ${THIS_TARGET} 308)
# Test message with array with two blobs
add_test(NAME TestMIMEExtractArrayWithTwoBlobsMessage COMMAND ${THIS_TARGET} 309)
# Test message with array with two empty arrays
add_test(NAME TestMIMEInsertArrayWithTwoEmptyArraysMessage COMMAND ${THIS_TARGET} 310)
# Test message with array with two empty arrays
add_test(NAME TestMIMEExtractArrayWithTwoEmptyArraysMessage COMMAND ${THIS_TARGET} 311)
# Test message with array with two empty maps
add_test(NAME TestMIMEInsertArrayWithTwoEmptyMapsMessage COMMAND ${THIS_TARGET} 312)
# Test message with array with two empty maps
add_test(NAME TestMIMEExtractArrayWithTwoEmptyMapsMessage COMMAND ${THIS_TARGET} 313)
# Test message with array with two empty sets
add_test(NAME TestMIMEInsertArrayWithTwoEmptySetsMessage COMMAND ${THIS_TARGET} 314)
# Test message with array with two empty sets
add_test(NAME TestMIMEExtractArrayWithTwoEmptySetsMessage COMMAND ${THIS_TARGET} 315)
# Test message with array with empty array and empty map
add_test(NAME TestMIMEInsertArrayWithEmptyArrayAndEmptyMapMessage COMMAND ${THIS_TARGET} 316)
# Test message with array with empty array and empty map
add_test(NAME TestMIMEExtractArrayWithEmptyArrayAndEmptyMapMessage COMMAND ${THIS_TARGET} 317)
# Test message with array with empty map and empty set
add_test(NAME TestMIMEInsertArrayWithEmptyMapAndEmptySetMessage COMMAND ${THIS_TARGET} 318)
# Test message with array with empty map and empty set
add_test(NAME TestMIMEExtractArrayWithEmptyMapAndEmptySetMessage COMMAND ${THIS_TARGET} 319)
# Test message with array with empty set and empty array
add_test(NAME TestMIMEInsertArrayWithEmptySetAndEmptyArrayMessage COMMAND ${THIS_TARGET} 320)
# Test message with array with empty set and empty array
add_test(NAME TestMIMEExtractArrayWithEmptySetAndEmptyArrayMessage COMMAND ${THIS_TARGET} 321)
# Test message with array with many doubles
add_test(NAME TestMIMEInsertArrayWithManyDoublesMessage COMMAND ${THIS_TARGET} 322)
# Test message with array with many doubles
add_test(NAME TestMIMEExtractArrayWithManyDoublesMessage COMMAND ${THIS_TARGET} 323)

# Test message with logical map
add_test(NAME TestMIMEInsertLogicalMapMessage COMMAND ${THIS_TARGET} 400)
# Test message with logical map
add_test(NAME TestMIMEExtractLogicalMapMessage COMMAND ${THIS_TARGET} 401)
# Test message with integer map
add_test(NAME TestMIMEInsertIntegerMapMessage COMMAND ${THIS_TARGET} 402)
# Test message with integer map
add_test(NAME TestMIMEExtractIntegerMapMessage COMMAND ${THIS_TARGET} 403)
# Test message with string map
add_test(NAME TestMIMEInsertStringMapMessage COMMAND ${THIS_TARGET} 404)
# Test message with string map
add_test(NAME TestMIMEExtractStringMapMessage COMMAND ${THIS_TARGET} 405)
# Test message with logical set
add_test(NAME TestMIMEInsertLogicalSetMessage COMMAND ${THIS_TARGET} 406)
# Test message with logical set
add_test(NAME TestMIMEExtractLogicalSetMessage COMMAND ${THIS_TARGET} 407)
# Test message with integer set
add_test(NAME TestMIMEInsertIntegerSetMessage COMMAND ${THIS_TARGET} 408)
# Test message with integer set
add_test(NAME TestMIMEExtractIntegerSetMessage COMMAND ${THIS_TARGET} 409)
# Test message with string set
add_test(NAME TestMIMEInsertStringSetMessage COMMAND ${THIS_TARGET} 410)
# Test message with string set
add_test(NAME TestMIMEExtractStringSetMessage COMMAND ${THIS_TARGET} 411)

# Test message with array with range of integers
add_test(NAME TestMIMEInsertArrayWithRangeOfIntegers COMMAND ${THIS_TARGET} 500)
# Test message with array with range of integers
add_test(NAME TestMIMEExtractArrayWithRangeOfIntegers COMMAND ${THIS_TARGET} 501)
