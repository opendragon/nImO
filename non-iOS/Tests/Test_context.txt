#--------------------------------------------------------------------------------------------------
#
#  File:       non-iOS/Tests/Test_context.txt
#
#  Project:    nImO
#
#  Contains:   The CMAKE definitions for the unit test application.
#
#  Written by: Norman Jaffe
#
#  Copyright:  (c) 2023 by OpenDragon.
#
#              All rights reserved. Redistribution and use in source and binary forms, with or
#              without modification, are permitted provided that the following conditions are met:
#                * Redistributions of source code must retain the above copyright notice, this list
#                  of conditions and the following disclaimer.
#                * Redistributions in binary form must reproduce the above copyright notice, this
#                  list of conditions and the following disclaimer in the documentation and / or
#                  other materials provided with the distribution.
#                * Neither the name of the copyright holders nor the names of its contributors may
#                  be used to endorse or promote products derived from this software without
#                  specific prior written permission.
#
#              THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
#              EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
#              OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
#              SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
#              INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
#              TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
#              BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#              CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
#              ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
#              DAMAGE.
#
#  Created:    2023-01-25
#
#--------------------------------------------------------------------------------------------------

set(THIS_TARGET nImOcontextTest)

if(WIN32)
    set(VERS_RESOURCE ${THIS_TARGET}.rc)
    configure_file(${THIS_SOURCE_DIR}/${THIS_TARGET}.rc.in ${THIS_TARGET}.rc)
else()
    set(VERS_RESOURCE "")
endif()

enable_testing()

add_executable(${THIS_TARGET}
               ${THIS_SOURCE_DIR}/nImOcontextTest.cpp
               ${VERS_RESOURCE})

# Note that the order of inclusion of libraries is critical in Linux, as they appear to only be
# processed once.
target_link_libraries(${THIS_TARGET} ${nImO_LINK_LIBRARIES})

fix_dynamic_libs(${THIS_TARGET})

## Test create a ContextWithMDNS
add_test(NAME TestCreateContextWithMDNS COMMAND ${THIS_TARGET} 1)
## Test create a ContextWithNetworking
add_test(NAME TestCreateContextWithNetworking COMMAND ${THIS_TARGET} 2)
## Test create a FilterContext
add_test(NAME TestCreateFilterContext COMMAND ${THIS_TARGET} 3)
## Test create a MiscellaneousContext
add_test(NAME TestCreateMiscellaneousContext COMMAND ${THIS_TARGET} 4)
## Test create a ServiceContext
add_test(NAME TestCreateServiceContext COMMAND ${THIS_TARGET} 5)
## Test create a SinkContext
add_test(NAME TestCreateSinkContext COMMAND ${THIS_TARGET} 6)
## Test create a SourceContext
add_test(NAME TestCreateSourceContext COMMAND ${THIS_TARGET} 7)
## Test create a TestContext
add_test(NAME TestCreateTestContext COMMAND ${THIS_TARGET} 8)
## Test create a UtilityContext
add_test(NAME TestCreateUtilityContext COMMAND ${THIS_TARGET} 9)
## Test create two Contexts
add_test(NAME TestCreateTwoContexts COMMAND ${THIS_TARGET} 10)
