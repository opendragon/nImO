#--------------------------------------------------------------------------------------------------
#
#  File:       non-iOS/Tests/Test_parser.txt
#
#  Project:    nImO
#
#  Contains:   The CMAKE definitions for the unit test application.
#
#  Written by: Norman Jaffe
#
#  Copyright:  (c) 2020 by OpenDragon.
#
#              All rights reserved. Redistribution and use in source and binary forms, with or
#              without modification, are permitted provided that the following conditions are met:
#                * Redistributions of source code must retain the above copyright notice, this list
#                  of conditions and the following disclaimer.
#                * Redistributions in binary form must reproduce the above copyright notice, this
#                  list of conditions and the following disclaimer in the documentation and / or
#                  other materials provided with the distribution.
#                * Neither the name of the copyright holders nor the names of its contributors may
#                  be used to endorse or promote products derived from this software without
#                  specific prior written permission.
#
#              THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
#              EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
#              OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
#              SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
#              INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
#              TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
#              BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#              CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
#              ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
#              DAMAGE.
#
#  Created:    2020-03-06
#
#--------------------------------------------------------------------------------------------------

set(THIS_TARGET nImOparserTest)

if(WIN32)
    set(VERS_RESOURCE ${THIS_TARGET}.rc)
    configure_file(${THIS_SOURCE_DIR}/${THIS_TARGET}.rc.in ${THIS_TARGET}.rc)
else()
    set(VERS_RESOURCE "")
endif()

enable_testing()

add_executable(${THIS_TARGET}
                ${THIS_SOURCE_DIR}/nImOparserTest.cpp
                ${VERS_RESOURCE})

# Note that the order of inclusion of libraries is critical in Linux, as they appear to only be
# processed once.
target_link_libraries(${THIS_TARGET} ${nImO_LINK_LIBRARIES})

fix_dynamic_libs(${THIS_TARGET})

# Test parse of logical false value
add_test(NAME TestLogicalFalseValue COMMAND ${THIS_TARGET} 1 t "false" "false")
# Test parse of logical true value
add_test(NAME TestLogicalTrueValue COMMAND ${THIS_TARGET} 1 t "true" "true")
# Test parse of abbreviated logical false value
add_test(NAME TestAbbreviatedLogicalFalseValue COMMAND ${THIS_TARGET} 1 t "fal" "false")
# Test parse of abbreviated logical true value
add_test(NAME TestAbbreviatedLogicalTrueValue COMMAND ${THIS_TARGET} 1 t "tru" "true")
# Test parse of minimal logical false value
add_test(NAME TestMinimalLogicalFalseValue COMMAND ${THIS_TARGET} 1 t "f" "false")
# Test parse of minimal logical true value
add_test(NAME TestMinimalLogicalTrueValue COMMAND ${THIS_TARGET} 1 t "t" "true")
# Test parse of invalid logical value
add_test(NAME TestInvalidLogicalValue COMMAND ${THIS_TARGET} 1 f "42" "")
# Test parse of invalid logical false value
add_test(NAME TestInvalidLogicalFalseValue COMMAND ${THIS_TARGET} 1 f "falze" "")
# Test parse of invalid logical true value
add_test(NAME TestInvalidLogicalTrueValue COMMAND ${THIS_TARGET} 1 f "trve" "")
# Test parse of whitespace and logical false value
add_test(NAME TestWhitespaceAndLogicalFalseValue1 COMMAND ${THIS_TARGET} 1 t "fa  " "false")
# Test parse of whitespace and logical false value
add_test(NAME TestWhitespaceAndLogicalFalseValue2 COMMAND ${THIS_TARGET} 1 t "fa#asda" "false")
# Test parse of whitespace and logical true value
add_test(NAME TestWhitespaceAndLogicalTrueValue1 COMMAND ${THIS_TARGET} 1 t "tr " "true")
# Test parse of whitespace and logical true value
add_test(NAME TestWhitespaceAndLogicalTrueValue2 COMMAND ${THIS_TARGET} 1 t "tr #chuckles" "true")
# Test parse of whitespace and logical false value
add_test(NAME TestWhitespaceAndLogicalFalseValue3 COMMAND ${THIS_TARGET} 1 t "fa;" "false")
# Test parse of whitespace and logical false value
add_test(NAME TestWhitespaceAndLogicalFalseValue4 COMMAND ${THIS_TARGET} 1 t "fa,," "false")
# Test parse of whitespace and logical true value
add_test(NAME TestWhitespaceAndLogicalTrueValue3 COMMAND ${THIS_TARGET} 1 t "tr ,;" "true")
# Test parse of whitespace and logical true value
add_test(NAME TestWhitespaceAndLogicalTrueValue4 COMMAND ${THIS_TARGET} 1 t "tr ;," "true")
# Test parse of whitespace and logical false value
add_test(NAME TestWhitespaceAndLogicalFalseValue5 COMMAND ${THIS_TARGET} 1 t ";fa" "false")
# Test parse of whitespace and logical false value
add_test(NAME TestWhitespaceAndLogicalFalseValue6 COMMAND ${THIS_TARGET} 1 t ",,fa" "false")
# Test parse of whitespace and logical true value
add_test(NAME TestWhitespaceAndLogicalTrueValue5 COMMAND ${THIS_TARGET} 1 t ",;tr " "true")
# Test parse of whitespace and logical true value
add_test(NAME TestWhitespaceAndLogicalTrueValue6 COMMAND ${THIS_TARGET} 1 t ";,tr " "true")

# Test parse of number value
add_test(NAME TestNumberValue01 COMMAND ${THIS_TARGET} 2 t "0" "0")
# Test parse of number value
add_test(NAME TestNumberValue02 COMMAND ${THIS_TARGET} 2 t "1234" "1234")
# Test parse of number value
add_test(NAME TestNumberValue03 COMMAND ${THIS_TARGET} 2 t "1234.5" "1234.5")
# Test parse of number value
add_test(NAME TestNumberValue04 COMMAND ${THIS_TARGET} 2 t "-1234.5" "-1234.5")
# Test parse of number value
add_test(NAME TestNumberValue05 COMMAND ${THIS_TARGET} 2 t "-.5" "-0.5")
# Test parse of number value
add_test(NAME TestNumberValue06 COMMAND ${THIS_TARGET} 2 t ".5" "0.5")
# Test parse of number value
add_test(NAME TestNumberValue07 COMMAND ${THIS_TARGET} 2 t "+.5" "0.5")
# Test parse of number value
add_test(NAME TestNumberValue08 COMMAND ${THIS_TARGET} 2 t "0.5" "0.5")
# Test parse of number value
add_test(NAME TestNumberValue09 COMMAND ${THIS_TARGET} 2 t "1e2" "100")
# Test parse of number value
add_test(NAME TestNumberValue10 COMMAND ${THIS_TARGET} 2 t "1E+2" "100")
# Test parse of number value
add_test(NAME TestNumberValue11 COMMAND ${THIS_TARGET} 2 t "1e-2" "0.01")
# Test parse of number value
add_test(NAME TestNumberValue12 COMMAND ${THIS_TARGET} 2 t "-1e2" "-100")
# Test parse of number value
add_test(NAME TestNumberValue13 COMMAND ${THIS_TARGET} 2 t "-1e+2" "-100")
# Test parse of number value
add_test(NAME TestNumberValue14 COMMAND ${THIS_TARGET} 2 t "-1e-2" "-0.01")
# Test parse of number value
add_test(NAME TestNumberValue15 COMMAND ${THIS_TARGET} 2 t "+1e2" "100")
# Test parse of number value
add_test(NAME TestNumberValue16 COMMAND ${THIS_TARGET} 2 t "+1e+2" "100")
# Test parse of number value
add_test(NAME TestNumberValue17 COMMAND ${THIS_TARGET} 2 t "+1e-2" "0.01")
# Test parse of number value
add_test(NAME TestNumberValue18 COMMAND ${THIS_TARGET} 2 t "-.5e0" "-0.5")
# Test parse of number value
add_test(NAME TestNumberValue19 COMMAND ${THIS_TARGET} 2 t ".5e1" "5")
# Test parse of number value
add_test(NAME TestNumberValue20 COMMAND ${THIS_TARGET} 2 t "+.5e-001" "0.05")
# Test parse of number value
add_test(NAME TestNumberValue21 COMMAND ${THIS_TARGET} 2 t "0.5E3" "500")
# Test parse of whitespace and number value
add_test(NAME TestWhitespaceAndNumberValue1 COMMAND ${THIS_TARGET} 2 t "0.5  " "0.5")
# Test parse of whitespace and number value
add_test(NAME TestWhitespaceAndNumberValue2 COMMAND ${THIS_TARGET} 2 t "-1e2#asda" "-100")
# Test parse of whitespace and number value
add_test(NAME TestWhitespaceAndNumberValue3 COMMAND ${THIS_TARGET} 2 t ".5e1 #chuckles" "5")
# Test parse of whitespace and number value
add_test(NAME TestWhitespaceAndNumberValue4 COMMAND ${THIS_TARGET} 2 t "0.5  ,," "0.5")
# Test parse of whitespace and number value
add_test(NAME TestWhitespaceAndNumberValue5 COMMAND ${THIS_TARGET} 2 t "-1e2;" "-100")
# Test parse of whitespace and number value
add_test(NAME TestWhitespaceAndNumberValue6 COMMAND ${THIS_TARGET} 2 t ".5e1 ,;," "5")
# Test parse of whitespace and number value
add_test(NAME TestWhitespaceAndNumberValue7 COMMAND ${THIS_TARGET} 2 t ",,0.5 " "0.5")
# Test parse of whitespace and number value
add_test(NAME TestWhitespaceAndNumberValue8 COMMAND ${THIS_TARGET} 2 t ";-1e2" "-100")
# Test parse of whitespace and number value
add_test(NAME TestWhitespaceAndNumberValue9 COMMAND ${THIS_TARGET} 2 t ",;,.5e1 " "5")

# Test parse of invalid number value
add_test(NAME TestInvalidNumberValue01 COMMAND ${THIS_TARGET} 2 f "f" "")
# Test parse of invalid number value
add_test(NAME TestInvalidNumberValue02 COMMAND ${THIS_TARGET} 2 f "+-" "")
# Test parse of invalid number value
add_test(NAME TestInvalidNumberValue03 COMMAND ${THIS_TARGET} 2 f "+e" "")
# Test parse of invalid number value
add_test(NAME TestInvalidNumberValue04 COMMAND ${THIS_TARGET} 2 f "-e" "")
# Test parse of invalid number value
add_test(NAME TestInvalidNumberValue05 COMMAND ${THIS_TARGET} 2 f "1a" "")
# Test parse of invalid number value
add_test(NAME TestInvalidNumberValue06 COMMAND ${THIS_TARGET} 2 f "1.f" "")
# Test parse of invalid number value
add_test(NAME TestInvalidNumberValue07 COMMAND ${THIS_TARGET} 2 f "1ex" "")
# Test parse of invalid number value
add_test(NAME TestInvalidNumberValue08 COMMAND ${THIS_TARGET} 2 f "1e+-" "")
# Test parse of invalid number value
add_test(NAME TestInvalidNumberValue09 COMMAND ${THIS_TARGET} 2 f ".e" "")

# Test parse of string value
add_test(NAME TestStringValue01 COMMAND ${THIS_TARGET} 3 t "'abc'" "\"abc\"")
# Test parse of string value
add_test(NAME TestStringValue02 COMMAND ${THIS_TARGET} 3 t "\"abc\"" "\"abc\"")
# Test parse of string value
add_test(NAME TestStringValue03 COMMAND ${THIS_TARGET} 3 t "\"\"" "\"\"")
# Test parse of string value
add_test(NAME TestStringValue04 COMMAND ${THIS_TARGET} 3 t "''" "\"\"")
# Test parse of string value
add_test(NAME TestStringValue05 COMMAND ${THIS_TARGET} 3 t "\"\\\"\"" "'\"'")
# Test parse of string value
add_test(NAME TestStringValue06 COMMAND ${THIS_TARGET} 3 t "\"'\"" "\"'\"")
# Test parse of string value
add_test(NAME TestStringValue07 COMMAND ${THIS_TARGET} 3 t "\"@\\a\\b\\t\\n\\v\\f\\r\\s=\"" "\"@\\a\\b\\t\\n\\v\\f\\r =\"")
# Test parse of string value
add_test(NAME TestStringValue08 COMMAND ${THIS_TARGET} 3 t "\"@\\007\\010\\011\\012\\013\\014\\015\\033\\040=\"" "\"@\\a\\b\\t\\n\\v\\f\\r\\e =\"")
# Test parse of string value
add_test(NAME TestStringValue09 COMMAND ${THIS_TARGET} 3 t "\"@\\C-g\\C-H\\C-i\\C-J\\C-k\\C-L\\C-m\\C-[=\"" "\"@\\a\\b\\t\\n\\v\\f\\r\\e=\"")
# Test parse of string value
add_test(NAME TestStringValue10 COMMAND ${THIS_TARGET} 3 t "\"@\\cg\\cH\\ci\\cJ\\ck\\cL\\cm\\c[=\"" "\"@\\a\\b\\t\\n\\v\\f\\r\\e=\"")
# Test parse of string value
add_test(NAME TestStringValue11 COMMAND ${THIS_TARGET} 3 t "\"@\\M-!\\M-0\\M-A=\"" "\"@\\M-!\\M-0\\M-A=\"")
# Test parse of string value
add_test(NAME TestStringValue12 COMMAND ${THIS_TARGET} 3 t "\"@\\241\\260\\301=\"" "\"@\\M-!\\M-0\\M-A=\"")
# Test parse of string value
add_test(NAME TestStringValue13 COMMAND ${THIS_TARGET} 3 t "\"@\\M-\\C-@\\M-\\C-_\\200\\237\\377=\"" "\"@\\M-\\C-@\\M-\\C-_\\M-\\C-@\\M-\\C-_\\377=\"")
# Test parse of whitespace and string value
add_test(NAME TestWhitespaceAndStringValue1 COMMAND ${THIS_TARGET} 3 t "\"abc\"\t" "\"abc\"")
# Test parse of whitespace and string value
add_test(NAME TestWhitespaceAndStringValue2 COMMAND ${THIS_TARGET} 3 t "\"abc\"#blort" "\"abc\"")
# Test parse of whitespace and string value
add_test(NAME TestWhitespaceAndStringValue3 COMMAND ${THIS_TARGET} 3 t "\"\"  #ignore" "\"\"")
# Test parse of whitespace and string value
add_test(NAME TestWhitespaceAndStringValue4 COMMAND ${THIS_TARGET} 3 t "\"abc\"," "\"abc\"")
# Test parse of whitespace and string value
add_test(NAME TestWhitespaceAndStringValue5 COMMAND ${THIS_TARGET} 3 t "\"abc\";" "\"abc\"")
# Test parse of whitespace and string value
add_test(NAME TestWhitespaceAndStringValue6 COMMAND ${THIS_TARGET} 3 t "\"\"  ;,;" "\"\"")
# Test parse of whitespace and string value
add_test(NAME TestWhitespaceAndStringValue7 COMMAND ${THIS_TARGET} 3 t ",\"abc\"" "\"abc\"")
# Test parse of whitespace and string value
add_test(NAME TestWhitespaceAndStringValue8 COMMAND ${THIS_TARGET} 3 t ";\"abc\"" "\"abc\"")
# Test parse of whitespace and string value
add_test(NAME TestWhitespaceAndStringValue9 COMMAND ${THIS_TARGET} 3 t ";,;\"\"  " "\"\"")

# Test parse of string value
add_test(NAME TestInvalidStringValue01 COMMAND ${THIS_TARGET} 3 f "'abc" "")
# Test parse of string value
add_test(NAME TestInvalidStringValue02 COMMAND ${THIS_TARGET} 3 f "\"abc" "")
# Test parse of string value
add_test(NAME TestInvalidStringValue03 COMMAND ${THIS_TARGET} 3 f "\"" "")
# Test parse of string value
add_test(NAME TestInvalidStringValue04 COMMAND ${THIS_TARGET} 3 f "'" "")
# Test parse of string value
add_test(NAME TestInvalidStringValue05 COMMAND ${THIS_TARGET} 3 f "\"@\\x\\y\\z=\"" "")
# Test parse of string value
add_test(NAME TestInvalidStringValue06 COMMAND ${THIS_TARGET} 3 f "\"@\\008\\009=\"" "")
# Test parse of string value
add_test(NAME TestInvalidStringValue07 COMMAND ${THIS_TARGET} 3 f "\"@\\C-0\\C-1=\"" "")
# Test parse of string value
add_test(NAME TestInvalidStringValue08 COMMAND ${THIS_TARGET} 3 f "\"@\\c0\\c9=\"" "")
# Test parse of string value
add_test(NAME TestInvalidStringValue09 COMMAND ${THIS_TARGET} 3 f "\"@\\M-\\C-0\\M-\\C-9=\"" "")

# Test parse of address value
add_test(NAME TestAddressValue01 COMMAND ${THIS_TARGET} 4 t "@0.0.0.0" "@0.0.0.0")
# Test parse of address value
add_test(NAME TestAddressValue02 COMMAND ${THIS_TARGET} 4 t "@010.020.030.040" "@10.20.30.40")
# Test parse of address value
add_test(NAME TestAddressValue03 COMMAND ${THIS_TARGET} 4 t "@255.255.255.255" "@255.255.255.255")
# Test parse of whitespace and address value
add_test(NAME TestWhitespaceAndAddressValue1 COMMAND ${THIS_TARGET} 4 t "@0.0.0.0   " "@0.0.0.0")
# Test parse of whitespace and address value
add_test(NAME TestWhitespaceAndAddressValue2 COMMAND ${THIS_TARGET} 4 t "@010.020.030.040 #dad" "@10.20.30.40")
# Test parse of whitespace and address value
add_test(NAME TestWhitespaceAndAddressValue3 COMMAND ${THIS_TARGET} 4 t "@255.255.255.255#ddads" "@255.255.255.255")
# Test parse of whitespace and address value
add_test(NAME TestWhitespaceAndAddressValue4 COMMAND ${THIS_TARGET} 4 t "@0.0.0.0   ,,," "@0.0.0.0")
# Test parse of whitespace and address value
add_test(NAME TestWhitespaceAndAddressValue5 COMMAND ${THIS_TARGET} 4 t "@010.020.030.040 ;;;" "@10.20.30.40")
# Test parse of whitespace and address value
add_test(NAME TestWhitespaceAndAddressValue6 COMMAND ${THIS_TARGET} 4 t "@255.255.255.255,;," "@255.255.255.255")
# Test parse of whitespace and address value
add_test(NAME TestWhitespaceAndAddressValue7 COMMAND ${THIS_TARGET} 4 t ",,,@0.0.0.0   " "@0.0.0.0")
# Test parse of whitespace and address value
add_test(NAME TestWhitespaceAndAddressValue8 COMMAND ${THIS_TARGET} 4 t ";;;@010.020.030.040 " "@10.20.30.40")
# Test parse of whitespace and address value
add_test(NAME TestWhitespaceAndAddressValue9 COMMAND ${THIS_TARGET} 4 t ",;,@255.255.255.255" "@255.255.255.255")

# Test parse of invalid address value
add_test(NAME TestInvalidAddressValue01 COMMAND ${THIS_TARGET} 4 f "@x" "")
# Test parse of invalid address value
add_test(NAME TestInvalidAddressValue02 COMMAND ${THIS_TARGET} 4 f "@10" "")
# Test parse of invalid address value
add_test(NAME TestInvalidAddressValue03 COMMAND ${THIS_TARGET} 4 f "@10.20" "")
# Test parse of invalid address value
add_test(NAME TestInvalidAddressValue04 COMMAND ${THIS_TARGET} 4 f "@10.20.30" "")
# Test parse of invalid address value
add_test(NAME TestInvalidAddressValue05 COMMAND ${THIS_TARGET} 4 f "@10..20.30.40" "")
# Test parse of invalid address value
add_test(NAME TestInvalidAddressValue06 COMMAND ${THIS_TARGET} 4 f "@-10.0.0.0" "")
# Test parse of invalid address value
add_test(NAME TestInvalidAddressValue07 COMMAND ${THIS_TARGET} 4 f "@10.-10.0.0" "")
# Test parse of invalid address value
add_test(NAME TestInvalidAddressValue08 COMMAND ${THIS_TARGET} 4 f "@10.0.-10.0" "")
# Test parse of invalid address value
add_test(NAME TestInvalidAddressValue09 COMMAND ${THIS_TARGET} 4 f "@10.0.0.-200" "")
# Test parse of invalid address value
add_test(NAME TestInvalidAddressValue10 COMMAND ${THIS_TARGET} 4 f "@256.0.0.0" "")
# Test parse of invalid address value
add_test(NAME TestInvalidAddressValue11 COMMAND ${THIS_TARGET} 4 f "@0.256.0.0" "")
# Test parse of invalid address value
add_test(NAME TestInvalidAddressValue12 COMMAND ${THIS_TARGET} 4 f "@0.0.0.256" "")
# Test parse of invalid address value
add_test(NAME TestInvalidAddressValue13 COMMAND ${THIS_TARGET} 4 f "@.0.0.0" "")

# Test parse of array value
add_test(NAME TestArrayValue01 COMMAND ${THIS_TARGET} 5 t "( )" "( )")
# Test parse of array value
add_test(NAME TestArrayValue02 COMMAND ${THIS_TARGET} 5 t "()" "( )")
# Test parse of array value
add_test(NAME TestArrayValue03 COMMAND ${THIS_TARGET} 5 t "( 42 )" "( 42 )")
# Test parse of array value
add_test(NAME TestArrayValue04 COMMAND ${THIS_TARGET} 5 t "(42)" "( 42 )")
# Test parse of array value
add_test(NAME TestArrayValue05 COMMAND ${THIS_TARGET} 5 t "(t)" "( true )")
# Test parse of array value
add_test(NAME TestArrayValue06 COMMAND ${THIS_TARGET} 5 t "('abc')" "( \"abc\" )")
# Test parse of array value
add_test(NAME TestArrayValue07 COMMAND ${THIS_TARGET} 5 t "(42.25 fa)" "( 42.25, false )")
# Test parse of array value
add_test(NAME TestArrayValue08 COMMAND ${THIS_TARGET} 5 t "(fa 17)" "( false, 17 )")
# Test parse of array value
add_test(NAME TestArrayValue09 COMMAND ${THIS_TARGET} 5 t "(12 'abc' t)" "( 12, \"abc\", true )")
# Test parse of array value
add_test(NAME TestArrayValue10 COMMAND ${THIS_TARGET} 5 t "( @1.2.3.4 )" "( @1.2.3.4 )")
# Test parse of array value
add_test(NAME TestArrayValue11 COMMAND ${THIS_TARGET} 5 t "(@2.3.4.5)" "( @2.3.4.5 )")
# Test parse of array value
add_test(NAME TestArrayValue12 COMMAND ${THIS_TARGET} 5 t "(@3.4.5.6 fa)" "( @3.4.5.6, false )")
# Test parse of array value
add_test(NAME TestArrayValue13 COMMAND ${THIS_TARGET} 5 t "(fa @4.5.6.7)" "( false, @4.5.6.7 )")
# Test parse of array value
add_test(NAME TestArrayValue14 COMMAND ${THIS_TARGET} 5 t "(@5.6.7.8 'abc' t)" "( @5.6.7.8, \"abc\", true )")
# Test parse of whitespace and array value
add_test(NAME TestWhitespaceAndArrayValue1 COMMAND ${THIS_TARGET} 5 t "( )#1123" "( )")
# Test parse of whitespace and array value
add_test(NAME TestWhitespaceAndArrayValue2 COMMAND ${THIS_TARGET} 5 t "( #123\n)" "( )")
# Test parse of whitespace and array value
add_test(NAME TestWhitespaceAndArrayValue3 COMMAND ${THIS_TARGET} 5 t "()#1412" "( )")
# Test parse of whitespace and array value
add_test(NAME TestWhitespaceAndArrayValue4 COMMAND ${THIS_TARGET} 5 t "(#12312\n)" "( )")
# Test parse of whitespace and array value
add_test(NAME TestWhitespaceAndArrayValue5 COMMAND ${THIS_TARGET} 5 t "( 42 )#212" "( 42 )")
# Test parse of whitespace and array value
add_test(NAME TestWhitespaceAndArrayValue6 COMMAND ${THIS_TARGET} 5 t "( 42#556\n)" "( 42 )")
# Test parse of whitespace and array value
add_test(NAME TestWhitespaceAndArrayValue7 COMMAND ${THIS_TARGET} 5 t "(#424234\n42 )" "( 42 )")
# Test parse of whitespace and array value
add_test(NAME TestWhitespaceAndArrayValue8 COMMAND ${THIS_TARGET} 5 t "( )," "( )")
# Test parse of whitespace and array value
add_test(NAME TestWhitespaceAndArrayValue9 COMMAND ${THIS_TARGET} 5 t "( ;\n)" "( )")
# Test parse of whitespace and array value
add_test(NAME TestWhitespaceAndArrayValue10 COMMAND ${THIS_TARGET} 5 t "(),;" "( )")
# Test parse of whitespace and array value
add_test(NAME TestWhitespaceAndArrayValue11 COMMAND ${THIS_TARGET} 5 t "(;,\n)" "( )")
# Test parse of whitespace and array value
add_test(NAME TestWhitespaceAndArrayValue12 COMMAND ${THIS_TARGET} 5 t "( 42 ),," "( 42 )")
# Test parse of whitespace and array value
add_test(NAME TestWhitespaceAndArrayValue13 COMMAND ${THIS_TARGET} 5 t "( 42;;\n)" "( 42 )")
# Test parse of whitespace and array value
add_test(NAME TestWhitespaceAndArrayValue14 COMMAND ${THIS_TARGET} 5 t "(,,,\n42 )" "( 42 )")
# Test parse of whitespace and array value
add_test(NAME TestWhitespaceAndArrayValue15 COMMAND ${THIS_TARGET} 5 t ",( )" "( )")
# Test parse of whitespace and array value
add_test(NAME TestWhitespaceAndArrayValue16 COMMAND ${THIS_TARGET} 5 t ",;()" "( )")
# Test parse of whitespace and array value
add_test(NAME TestWhitespaceAndArrayValue17 COMMAND ${THIS_TARGET} 5 t ",,( 42 )" "( 42 )")

# Test parse of array value
add_test(NAME TestInvalidArrayValue01 COMMAND ${THIS_TARGET} 5 f "(" "")
# Test parse of array value
add_test(NAME TestInvalidArrayValue02 COMMAND ${THIS_TARGET} 5 f "(]" "")
# Test parse of array value
add_test(NAME TestInvalidArrayValue03 COMMAND ${THIS_TARGET} 5 f "( 42 " "")
# Test parse of array value
add_test(NAME TestInvalidArrayValue04 COMMAND ${THIS_TARGET} 5 f "(12 'abc' t" "")
# Test parse of array value
add_test(NAME TestInvalidArrayValue05 COMMAND ${THIS_TARGET} 5 f "(12t)" "")
# Test parse of array value
add_test(NAME TestInvalidArrayValue06 COMMAND ${THIS_TARGET} 5 f "(t'abc')" "")
# Test parse of array value
add_test(NAME TestInvalidArrayValue07 COMMAND ${THIS_TARGET} 5 f "('abc'12)" "")
# Test parse of array value
add_test(NAME TestInvalidArrayValue08 COMMAND ${THIS_TARGET} 5 f "( @6.7.8.9 " "")
# Test parse of array value
add_test(NAME TestInvalidArrayValue09 COMMAND ${THIS_TARGET} 5 f "(@7.8.9.10 'abc' t" "")
# Test parse of array value
add_test(NAME TestInvalidArrayValue10 COMMAND ${THIS_TARGET} 5 f "(@8.9.10.11t)" "")
# Test parse of array value
add_test(NAME TestInvalidArrayValue11 COMMAND ${THIS_TARGET} 5 f "('abc'@9.10.11.12)" "")

# Test parse of set value
add_test(NAME TestSetValue01 COMMAND ${THIS_TARGET} 6 t "[ ]" "[ ]")
# Test parse of set value
add_test(NAME TestSetValue02 COMMAND ${THIS_TARGET} 6 t "[]" "[ ]")
# Test parse of set value
add_test(NAME TestSetValue03 COMMAND ${THIS_TARGET} 6 t "[ 42 ]" "[ 42 ]")
# Test parse of set value
add_test(NAME TestSetValue04 COMMAND ${THIS_TARGET} 6 t "[42]" "[ 42 ]")
# Test parse of set value
add_test(NAME TestSetValue05 COMMAND ${THIS_TARGET} 6 t "[t]" "[ true ]")
# Test parse of set value
add_test(NAME TestSetValue06 COMMAND ${THIS_TARGET} 6 t "['abc']" "[ \"abc\" ]")
# Test parse of set value
add_test(NAME TestSetValue07 COMMAND ${THIS_TARGET} 6 t "[ @10.11.12.13 ]" "[ @10.11.12.13 ]")
# Test parse of set value
add_test(NAME TestSetValue08 COMMAND ${THIS_TARGET} 6 t "[@11.12.13.14]" "[ @11.12.13.14 ]")
# Test parse of whitespace and set value
add_test(NAME TestWhitespaceAndSetValue1 COMMAND ${THIS_TARGET} 6 t "[ ]#wr" "[ ]")
# Test parse of whitespace and set value
add_test(NAME TestWhitespaceAndSetValue2 COMMAND ${THIS_TARGET} 6 t "[#545\n]" "[ ]")
# Test parse of whitespace and set value
add_test(NAME TestWhitespaceAndSetValue3 COMMAND ${THIS_TARGET} 6 t "[]#65" "[ ]")
# Test parse of whitespace and set value
add_test(NAME TestWhitespaceAndSetValue4 COMMAND ${THIS_TARGET} 6 t "[#87\n]" "[ ]")
# Test parse of whitespace and set value
add_test(NAME TestWhitespaceAndSetValue5 COMMAND ${THIS_TARGET} 6 t "[ 42 ]#fds" "[ 42 ]")
# Test parse of whitespace and set value
add_test(NAME TestWhitespaceAndSetValue6 COMMAND ${THIS_TARGET} 6 t "[ 42#546\n]" "[ 42 ]")
# Test parse of whitespace and set value
add_test(NAME TestWhitespaceAndSetValue7 COMMAND ${THIS_TARGET} 6 t "[#eryey\n42 ]" "[ 42 ]")
# Test parse of whitespace and set value
add_test(NAME TestWhitespaceAndSetValue8 COMMAND ${THIS_TARGET} 6 t "[ ]," "[ ]")
# Test parse of whitespace and set value
add_test(NAME TestWhitespaceAndSetValue9 COMMAND ${THIS_TARGET} 6 t "[;\n]" "[ ]")
# Test parse of whitespace and set value
add_test(NAME TestWhitespaceAndSetValue10 COMMAND ${THIS_TARGET} 6 t "[];;" "[ ]")
# Test parse of whitespace and set value
add_test(NAME TestWhitespaceAndSetValue11 COMMAND ${THIS_TARGET} 6 t "[,,\n]" "[ ]")
# Test parse of whitespace and set value
add_test(NAME TestWhitespaceAndSetValue12 COMMAND ${THIS_TARGET} 6 t "[ 42 ];,;" "[ 42 ]")
# Test parse of whitespace and set value
add_test(NAME TestWhitespaceAndSetValue13 COMMAND ${THIS_TARGET} 6 t "[ 42,;,\n]" "[ 42 ]")
# Test parse of whitespace and set value
add_test(NAME TestWhitespaceAndSetValue14 COMMAND ${THIS_TARGET} 6 t "[,,,;;;\n42 ]" "[ 42 ]")
# Test parse of whitespace and set value
add_test(NAME TestWhitespaceAndSetValue15 COMMAND ${THIS_TARGET} 6 t ",[ ]" "[ ]")
# Test parse of whitespace and set value
add_test(NAME TestWhitespaceAndSetValue16 COMMAND ${THIS_TARGET} 6 t ";;[]" "[ ]")
# Test parse of whitespace and set value
add_test(NAME TestWhitespaceAndSetValue17 COMMAND ${THIS_TARGET} 6 t ";,;[ 42 ]" "[ 42 ]")

# Test parse of set value
add_test(NAME TestInvalidSetValue01 COMMAND ${THIS_TARGET} 6 f "[42.25]" "")
# Test parse of set value
add_test(NAME TestInvalidSetValue02 COMMAND ${THIS_TARGET} 6 f "[fa 17]" "")
# Test parse of set value
add_test(NAME TestInvalidSetValue03 COMMAND ${THIS_TARGET} 6 f "[12 13 'abc']" "")
# Test parse of set value
add_test(NAME TestInvalidSetValue04 COMMAND ${THIS_TARGET} 6 f "[" "")
# Test parse of set value
add_test(NAME TestInvalidSetValue05 COMMAND ${THIS_TARGET} 6 f "[)" "")
# Test parse of set value
add_test(NAME TestInvalidSetValue06 COMMAND ${THIS_TARGET} 6 f "[ 42 " "")
# Test parse of set value
add_test(NAME TestInvalidSetValue07 COMMAND ${THIS_TARGET} 6 f "[fa @12.13.14.15]" "")
# Test parse of set value
add_test(NAME TestInvalidSetValue08 COMMAND ${THIS_TARGET} 6 f "[@12.13.14.15 @13.14.15.16 'abc']" "")
# Test parse of set value
add_test(NAME TestInvalidSetValue09 COMMAND ${THIS_TARGET} 6 f "[ @14.15.16.17 " "")

# Test parse of map value
add_test(NAME TestMapValue01 COMMAND ${THIS_TARGET} 7 t "{ }" "{ }")
# Test parse of map value
add_test(NAME TestMapValue02 COMMAND ${THIS_TARGET} 7 t "{}" "{ }")
# Test parse of map value
add_test(NAME TestMapValue03 COMMAND ${THIS_TARGET} 7 t "{ 42 > 12 }" "{ 42 > 12 }")
# Test parse of map value
add_test(NAME TestMapValue04 COMMAND ${THIS_TARGET} 7 t "{42>12}" "{ 42 > 12 }")
# Test parse of map value
add_test(NAME TestMapValue05 COMMAND ${THIS_TARGET} 7 t "{t>\"abc\"}" "{ true > \"abc\" }")
# Test parse of map value
add_test(NAME TestMapValue06 COMMAND ${THIS_TARGET} 7 t "{'abc'>12.5}" "{ \"abc\" > 12.5 }")
# Test parse of map value
add_test(NAME TestMapValue07 COMMAND ${THIS_TARGET} 7 t "{ 42 > [] }" "{ 42 > [ ] }")
# Test parse of map value
add_test(NAME TestMapValue08 COMMAND ${THIS_TARGET} 7 t "{ 42 > () }" "{ 42 > ( ) }")
# Test parse of map value
add_test(NAME TestMapValue09 COMMAND ${THIS_TARGET} 7 t "{ 42 > {} }" "{ 42 > { } }")
# Test parse of map value
add_test(NAME TestMapValue10 COMMAND ${THIS_TARGET} 7 t "{ @15.16.17.18 > 12 }" "{ @15.16.17.18 > 12 }")
# Test parse of map value
add_test(NAME TestMapValue11 COMMAND ${THIS_TARGET} 7 t "{@16.17.18.19>12}" "{ @16.17.18.19 > 12 }")
# Test parse of map value
add_test(NAME TestMapValue12 COMMAND ${THIS_TARGET} 7 t "{ @17.18.19.20 > [] }" "{ @17.18.19.20 > [ ] }")
# Test parse of map value
add_test(NAME TestMapValue13 COMMAND ${THIS_TARGET} 7 t "{ @18.19.20.21 > () }" "{ @18.19.20.21 > ( ) }")
# Test parse of map value
add_test(NAME TestMapValue14 COMMAND ${THIS_TARGET} 7 t "{ @19.20.21.22 > {} }" "{ @19.20.21.22 > { } }")
# Test parse of map value
add_test(NAME TestMapValue15 COMMAND ${THIS_TARGET} 7 t "{ 42 > @20.21.22.23 }" "{ 42 > @20.21.22.23 }")
# Test parse of map value
add_test(NAME TestMapValue16 COMMAND ${THIS_TARGET} 7 t "{42>@21.22.23.24}" "{ 42 > @21.22.23.24 }")
# Test parse of map value
add_test(NAME TestMapValue17 COMMAND ${THIS_TARGET} 7 t "{'abc'>@22.23.24.25}" "{ \"abc\" > @22.23.24.25 }")
# Test parse of whitespace and map value
add_test(NAME TestWhitespaceAndMapValue1 COMMAND ${THIS_TARGET} 7 t "{ }#tertr" "{ }")
# Test parse of whitespace and map value
add_test(NAME TestWhitespaceAndMapValue2 COMMAND ${THIS_TARGET} 7 t "{#trry\n}" "{ }")
# Test parse of whitespace and map value
add_test(NAME TestWhitespaceAndMapValue3 COMMAND ${THIS_TARGET} 7 t "{}#uy" "{ }")
# Test parse of whitespace and map value
add_test(NAME TestWhitespaceAndMapValue4 COMMAND ${THIS_TARGET} 7 t "{#757\n}" "{ }")
# Test parse of whitespace and map value
add_test(NAME TestWhitespaceAndMapValue5 COMMAND ${THIS_TARGET} 7 t "{ 42 > 12 }#523" "{ 42 > 12 }")
# Test parse of whitespace and map value
add_test(NAME TestWhitespaceAndMapValue6 COMMAND ${THIS_TARGET} 7 t "{ 42 > 12#grt\n}" "{ 42 > 12 }")
# Test parse of whitespace and map value
add_test(NAME TestWhitespaceAndMapValue7 COMMAND ${THIS_TARGET} 7 t "{ 42 >#fddsf\n12 }" "{ 42 > 12 }")
# Test parse of whitespace and map value
add_test(NAME TestWhitespaceAndMapValue8 COMMAND ${THIS_TARGET} 7 t "{ 42#6554645\n> 12 }" "{ 42 > 12 }")
# Test parse of whitespace and map value
add_test(NAME TestWhitespaceAndMapValue9 COMMAND ${THIS_TARGET} 7 t "{#3423432\n42 > 12 }" "{ 42 > 12 }")
# Test parse of whitespace and map value
add_test(NAME TestWhitespaceAndMapValue10 COMMAND ${THIS_TARGET} 7 t "{ }," "{ }")
# Test parse of whitespace and map value
add_test(NAME TestWhitespaceAndMapValue11 COMMAND ${THIS_TARGET} 7 t "{;\n}" "{ }")
# Test parse of whitespace and map value
add_test(NAME TestWhitespaceAndMapValue12 COMMAND ${THIS_TARGET} 7 t "{},," "{ }")
# Test parse of whitespace and map value
add_test(NAME TestWhitespaceAndMapValue13 COMMAND ${THIS_TARGET} 7 t "{;;\n}" "{ }")
# Test parse of whitespace and map value
add_test(NAME TestWhitespaceAndMapValue14 COMMAND ${THIS_TARGET} 7 t "{ 42 > 12 },,," "{ 42 > 12 }")
# Test parse of whitespace and map value
add_test(NAME TestWhitespaceAndMapValue15 COMMAND ${THIS_TARGET} 7 t "{ 42 > 12;;;\n}" "{ 42 > 12 }")
# Test parse of whitespace and map value
add_test(NAME TestWhitespaceAndMapValue16 COMMAND ${THIS_TARGET} 7 t "{ 42 >,;,\n12 }" "{ 42 > 12 }")
# Test parse of whitespace and map value
add_test(NAME TestWhitespaceAndMapValue17 COMMAND ${THIS_TARGET} 7 t "{ 42;,;\n> 12 }" "{ 42 > 12 }")
# Test parse of whitespace and map value
add_test(NAME TestWhitespaceAndMapValue18 COMMAND ${THIS_TARGET} 7 t "{,,,\n42 > 12 }" "{ 42 > 12 }")
# Test parse of whitespace and map value
add_test(NAME TestWhitespaceAndMapValue19 COMMAND ${THIS_TARGET} 7 t ",{ }" "{ }")
# Test parse of whitespace and map value
add_test(NAME TestWhitespaceAndMapValue20 COMMAND ${THIS_TARGET} 7 t ",,{}" "{ }")
# Test parse of whitespace and map value
add_test(NAME TestWhitespaceAndMapValue21 COMMAND ${THIS_TARGET} 7 t ";;;{ 42 > 12 }" "{ 42 > 12 }")

# Test parse of map value
add_test(NAME TestInvalidMapValue01 COMMAND ${THIS_TARGET} 7 f "{42.25}" "")
# Test parse of map value
add_test(NAME TestInvalidMapValue02 COMMAND ${THIS_TARGET} 7 f "{fa 17}" "")
# Test parse of map value
add_test(NAME TestInvalidMapValue03 COMMAND ${THIS_TARGET} 7 f "{12 13 'abc'}" "")
# Test parse of map value
add_test(NAME TestInvalidMapValue04 COMMAND ${THIS_TARGET} 7 f "{" "")
# Test parse of map value
add_test(NAME TestInvalidMapValue05 COMMAND ${THIS_TARGET} 7 f "{)" "")
# Test parse of map value
add_test(NAME TestInvalidMapValue06 COMMAND ${THIS_TARGET} 7 f "{ 42 " "")
# Test parse of map value
add_test(NAME TestInvalidMapValue07 COMMAND ${THIS_TARGET} 7 f "{fa @23.24.25.26}" "")
# Test parse of map value
add_test(NAME TestInvalidMapValue08 COMMAND ${THIS_TARGET} 7 f "{@24.25.26.27 13 'abc'}" "")
# Test parse of map value
add_test(NAME TestInvalidMapValue09 COMMAND ${THIS_TARGET} 7 f "{ @25.26.27.28 " "")

# Test parse of implicit array
add_test(NAME TestImplicitArrayValue01 COMMAND ${THIS_TARGET} 8 t "1 2" "( 1, 2 )")
# Test parse of implicit array
add_test(NAME TestImplicitArrayValue02 COMMAND ${THIS_TARGET} 8 t "1 t" "( 1, true )")
# Test parse of implicit array
add_test(NAME TestImplicitArrayValue03 COMMAND ${THIS_TARGET} 8 t "'abc' 2" "( \"abc\", 2 )")
# Test parse of implicit array
add_test(NAME TestImplicitArrayValue04 COMMAND ${THIS_TARGET} 8 t "(1 2) 3" "( ( 1, 2 ), 3 )")
# Test parse of implicit array
add_test(NAME TestImplicitArrayValue05 COMMAND ${THIS_TARGET} 8 t "@24.25.26.27 2" "( @24.25.26.27, 2 )")
# Test parse of implicit array
add_test(NAME TestImplicitArrayValue06 COMMAND ${THIS_TARGET} 8 t "1 @24.25.26.27" "( 1, @24.25.26.27 )")
# Test parse of implicit array
add_test(NAME TestImplicitArrayValue07 COMMAND ${THIS_TARGET} 8 t "@24.25.26.27 t" "( @24.25.26.27, true )")
# Test parse of implicit array
add_test(NAME TestImplicitArrayValue08 COMMAND ${THIS_TARGET} 8 t "'abc' @24.25.26.27" "( \"abc\", @24.25.26.27 )")
# Test parse of implicit array
add_test(NAME TestImplicitArrayValue09 COMMAND ${THIS_TARGET} 8 t "(@24.25.26.27 2) 3" "( ( @24.25.26.27, 2 ), 3 )")
# Test parse of implicit array
add_test(NAME TestImplicitArrayValue10 COMMAND ${THIS_TARGET} 8 t "(1 @25.26.27.28) 3" "( ( 1, @25.26.27.28 ), 3 )")
# Test parse of implicit array
add_test(NAME TestImplicitArrayValue11 COMMAND ${THIS_TARGET} 8 t "(1 2) @25.26.27.28" "( ( 1, 2 ), @25.26.27.28 )")

# Test parse of implicit array
add_test(NAME TestInvalidImplicitArrayValue01 COMMAND ${THIS_TARGET} 8 f "1 (" "")
# Test parse of implicit array
add_test(NAME TestInvalidImplicitArrayValue02 COMMAND ${THIS_TARGET} 8 f "1 tx" "")
# Test parse of implicit array
add_test(NAME TestInvalidImplicitArrayValue03 COMMAND ${THIS_TARGET} 8 f "'abc' 2f" "")
# Test parse of implicit array
add_test(NAME TestInvalidImplicitArrayValue04 COMMAND ${THIS_TARGET} 8 f "(1 2) {" "")
# Test parse of implicit array
add_test(NAME TestInvalidImplicitArrayValue05 COMMAND ${THIS_TARGET} 8 f "@25.26.27.28 (" "")
# Test parse of implicit array
add_test(NAME TestInvalidImplicitArrayValue06 COMMAND ${THIS_TARGET} 8 f "@25.26.27.28 tx" "")
# Test parse of implicit array
add_test(NAME TestInvalidImplicitArrayValue07 COMMAND ${THIS_TARGET} 8 f "(1 @25.26.27.28) {" "")
