#--------------------------------------------------------------------------------------------------
#
#  File:       non-iOS/Tests/Test_registry.txt
#
#  Project:    nImO
#
#  Contains:   The CMAKE definitions for the unit test application.
#
#  Written by: Norman Jaffe
#
#  Copyright:  (c) 2023 by OpenDragon.
#
#              All rights reserved. Redistribution and use in source and binary forms, with or
#              without modification, are permitted provided that the following conditions are met:
#                * Redistributions of source code must retain the above copyright notice, this list
#                  of conditions and the following disclaimer.
#                * Redistributions in binary form must reproduce the above copyright notice, this
#                  list of conditions and the following disclaimer in the documentation and / or
#                  other materials provided with the distribution.
#                * Neither the name of the copyright holders nor the names of its contributors may
#                  be used to endorse or promote products derived from this software without
#                  specific prior written permission.
#
#              THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
#              EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
#              OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
#              SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
#              INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
#              TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
#              BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#              CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
#              ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
#              DAMAGE.
#
#  Created:    2023-01-26
#
#--------------------------------------------------------------------------------------------------

set(THIS_TARGET nImOregistryTest)

if(WIN32)
    set(VERS_RESOURCE ${THIS_TARGET}.rc)
    configure_file(${THIS_SOURCE_DIR}/${THIS_TARGET}.rc.in ${THIS_TARGET}.rc)
else()
    set(VERS_RESOURCE "")
endif()

enable_testing()

include_directories("${nImO_SQLITE_DIR}")

add_executable(${THIS_TARGET}
               ${THIS_SOURCE_DIR}/nImOregistryTest.cpp
               ${THIS_SOURCE_DIR}/../Registry/nImOregistry.cpp
               ${THIS_SOURCE_DIR}/../Registry/nImOregistryContext.cpp
               ${nImO_SQLITE_DIR}/sqlite3.c
               ${VERS_RESOURCE})

# Note that the order of inclusion of libraries is critical in Linux, as they appear to only be
# processed once.
target_link_libraries(${THIS_TARGET} ${nImO_LINK_LIBRARIES})

fix_dynamic_libs(${THIS_TARGET})

## Test create a Registry
add_test(NAME TestCreateRegistry COMMAND ${THIS_TARGET} 1)
## Test check empty Registry for machines
add_test(NAME TestEmptyRegistryForMachines COMMAND ${THIS_TARGET} 2)
## Test check machine set with empty Registry
add_test(NAME TestMachineSetWithEmptyRegistry COMMAND ${THIS_TARGET} 3)
## Test check find machine with empty Registry
add_test(NAME TestFindMachineWithEmptyRegistry COMMAND ${THIS_TARGET} 4)
## Test add machine to Registry
add_test(NAME TestAddMachineToRegistry COMMAND ${THIS_TARGET} 5)
## Test check count machines with Registry with one machine
add_test(NAME TestCountMachinesWithRegistryWithOneMachine COMMAND ${THIS_TARGET} 6)
## Test check machine set with Registry with one machine
add_test(NAME TestMachineSetWithRegistryWithOneMachine COMMAND ${THIS_TARGET} 7)
## Test check find machine with Registry with one machine
add_test(NAME TestFindMachineWithRegistryWithOneMachine COMMAND ${THIS_TARGET} 8)
## Test add two distinct machines to Registry
add_test(NAME TestAddTwoDistinctMachinesToRegistry COMMAND ${THIS_TARGET} 9)
## Test check count machines with Registry with two machines
add_test(NAME TestCountMachinesWithRegistryWithTwoMachines COMMAND ${THIS_TARGET} 10)
## Test add two identical nodes to Registry
add_test(NAME TestAddTwoIdenticalMachinesToRegistry COMMAND ${THIS_TARGET} 11)

## Test check empty Registry for nodes
add_test(NAME TestEmptyRegistryForNodes COMMAND ${THIS_TARGET} 100)
## Test check node set with empty Registry
add_test(NAME TestNodeSetWithEmptyRegistry COMMAND ${THIS_TARGET} 101)
## Test check find with empty Registry
add_test(NAME TestFindNodeWithEmptyRegistry COMMAND ${THIS_TARGET} 102)
## Test add node to Registry
add_test(NAME TestAddNodeToRegistry COMMAND ${THIS_TARGET} 103)
## Test check count nodes with Registry with one node
add_test(NAME TestCountNodesWithRegistryWithOneNode COMMAND ${THIS_TARGET} 104)
## Test check node set with Registry with one node
add_test(NAME TestNodeSetWithRegistryWithOneNode COMMAND ${THIS_TARGET} 105)
## Test check find node with Registry with one node
add_test(NAME TestFindNodeWithRegistryWithOneNode COMMAND ${THIS_TARGET} 106)
## Test check node data added to Registry
add_test(NAME TestNodeDataAddedToRegistry COMMAND ${THIS_TARGET} 107)
## Test remove node from Registry
add_test(NAME TestRemoveNodeFromRegistry COMMAND ${THIS_TARGET} 108)
## Test check count nodes with Registry with node removed
add_test(NAME TestCountNodesWithRegistryWithNodeRemoved COMMAND ${THIS_TARGET} 109)
## Test check node set with Registry with node removed
add_test(NAME TestNodeSetWithRegistryWithNodeRemoved COMMAND ${THIS_TARGET} 110)
## Test check find node with Registry with node removed
add_test(NAME TestFindNodeWithRegistryNodeRemoved COMMAND ${THIS_TARGET} 111)
## Test add two distinct nodes to Registry
add_test(NAME TestAddTwoDistinctNodesToRegistry COMMAND ${THIS_TARGET} 112)
## Test check count nodes with Registry with two nodes
add_test(NAME TestCountNodesWithRegistryWithTwoNodes COMMAND ${THIS_TARGET} 113)
## Test check node set with Registry with two nodes
add_test(NAME TestNodeSetWithRegistryWithTwoNodes COMMAND ${THIS_TARGET} 114)
## Test check find node with Registry with two nodes
add_test(NAME TestFindNodeWithRegistryWithTwoNodes COMMAND ${THIS_TARGET} 115)
## Test remove added nodes from Registry
add_test(NAME TestRemoveNodesFromRegistry COMMAND ${THIS_TARGET} 116)
## Test check count nodes with Registry with all nodes removed
add_test(NAME TestCountNodesWithRegistryWithAllNodesRemoved COMMAND ${THIS_TARGET} 117)
## Test check node set with Registry with node removed
add_test(NAME TestNodeSetWithRegistryWithAllNodesRemoved COMMAND ${THIS_TARGET} 118)
## Test check find node with Registry with all nodes removed
add_test(NAME TestFindNodeWithRegistryAllNodesRemoved COMMAND ${THIS_TARGET} 119)
## Test add two identical nodes to Registry
add_test(NAME TestAddTwoIdenticalNodesToRegistry COMMAND ${THIS_TARGET} 120)
## Test check node information with Registry with no nodes
add_test(NAME TestNodeInfoWithRegistryWithNoNodes COMMAND ${THIS_TARGET} 121)
## Test check node information with Registry with one node
add_test(NAME TestNodeInfoWithRegistryWithOneNode COMMAND ${THIS_TARGET} 122)
## Test check node information with Registry with two nodes
add_test(NAME TestNodeInfoWithRegistryWithTwoNodes COMMAND ${THIS_TARGET} 123)
## Test check launch details with Registry with no nodes
add_test(NAME TestLaunchDetailsWithRegistryWithNoNodes COMMAND ${THIS_TARGET} 124)
## Test check launch details with Registry with one node
add_test(NAME TestLaunchDetailsWithRegistryWithOneNode COMMAND ${THIS_TARGET} 125)
## Test check launch details with Registry with two nodes
add_test(NAME TestLaunchDetailsWithRegistryWithTwoNodes COMMAND ${THIS_TARGET} 126)

## Test check node set with empty Registry via machine name
add_test(NAME TestNodeSetWithEmptyRegistryViaMachineName COMMAND ${THIS_TARGET} 200)
## Test check node set with Registry with one node via machine name
add_test(NAME TestNodeSetWithRegistryWithOneNodeViaMachineName COMMAND ${THIS_TARGET} 201)
## Test check node set with Registry with two nodes via machine name
add_test(NAME TestNodeSetWithRegistryWithTwoNodesViaMachineName COMMAND ${THIS_TARGET} 202)
## Test check node info with empty Registry via machine name
add_test(NAME TestNodeInfoWithEmptyRegistryViaMachineName COMMAND ${THIS_TARGET} 203)
## Test check node info with Registry with one node via machine name
add_test(NAME TestNodeInfoWithRegistryWithOneNodeViaMachineName COMMAND ${THIS_TARGET} 204)
## Test check node info with Registry with two nodes via machine name
add_test(NAME TestNodeInfoWithRegistryWithTwoNodesViaMachineName COMMAND ${THIS_TARGET} 205)
## Test check count nodes with empty Registry via machine name
add_test(NAME TestCountNodesWithEmptyRegistryViaMachineName COMMAND ${THIS_TARGET} 206)
## Test check count nodes with Registry with one node via machine name
add_test(NAME TestCountNodesWithRegistryWithOneNodeViaMachineName COMMAND ${THIS_TARGET} 207)
## Test check count nodes with Registry with two nodes via machine name
add_test(NAME TestCountNodesWithRegistryWithTwoNodesViaMachineName COMMAND ${THIS_TARGET} 208)

## Test check empty Registry for channel
add_test(NAME TestEmptyRegistryForChannel COMMAND ${THIS_TARGET} 300)
## Test check count channels with empty Registry
add_test(NAME TestCountChannelsWithEmptyRegistry COMMAND ${THIS_TARGET} 301)
## Test check add channel to Registry
add_test(NAME TestAddChannelToRegistry COMMAND ${THIS_TARGET} 302)
## Test check count channels in Registry with one channel
add_test(NAME TestCountChannelsInRegistryWithOneChannel COMMAND ${THIS_TARGET} 303)
## Test check find channel in Registry with one channel
add_test(NAME TestFindChannelInRegistryWithOneChannel COMMAND ${THIS_TARGET} 304)
## Test check add two channels to Registry
add_test(NAME TestAddTwoChannelsToRegistry COMMAND ${THIS_TARGET} 305)
## Test check count channels in Registry with two channels
add_test(NAME TestCountChannelsInRegistryWithTwoChannels COMMAND ${THIS_TARGET} 306)
## Test check find channels in Registry with two channels
add_test(NAME TestFindChannelsInRegistryWithTwoChannels COMMAND ${THIS_TARGET} 307)
## Test check add two identical channels to Registry
add_test(NAME TestAddTwoIdenticalChannelsToRegistry COMMAND ${THIS_TARGET} 308)
## Test check add channel with bad node name to Registry
add_test(NAME TestAddChannelWithBadNodeNameToRegistry COMMAND ${THIS_TARGET} 309)
## Test check add channel with bad channel name to Registry
add_test(NAME TestAddChannelWithBadChannelNameToRegistry COMMAND ${THIS_TARGET} 310)

## Test check get channel info from empty Registry
add_test(NAME TestGetChannelInfoFromEmptyRegistry COMMAND ${THIS_TARGET} 320)
## Test check get channel info from Registry with one channel
add_test(NAME TestGetChannelInfoFromRegistryWithOneChannel COMMAND ${THIS_TARGET} 321)
## Test check get channel info from Registry with two channels
add_test(NAME TestGetChannelInfoFromRegistryWithTwoChannels COMMAND ${THIS_TARGET} 322)
## Test check get channel info with bad node name from Registry
add_test(NAME TestGetChannelInfoWithBadNodeNameFromRegistry COMMAND ${THIS_TARGET} 323)
## Test check get channel info with bad channel name from Registry
add_test(NAME TestGetChannelInfoWithBadChannelNameFromRegistry COMMAND ${THIS_TARGET} 324)

## Test check get channel set for node from empty Registry
add_test(NAME TestGetChannelSetFromEmptyRegistry COMMAND ${THIS_TARGET} 340)
## Test check get channel set for node from Registry with one channel
add_test(NAME TestGetChannelSetForNodeFromRegistryWithOneChannel COMMAND ${THIS_TARGET} 341)
## Test check get channel set for node from Registry with one channel
add_test(NAME TestGetChannelSetForNodeFromRegistryWithTwoChannels COMMAND ${THIS_TARGET} 342)
## Test check get channel set for nodes from Registry with two nodes with channels
add_test(NAME TestGetChannelSetForNodesFromRegistryWithTwoNodesWithChannels COMMAND ${THIS_TARGET} 343)
## Test check get channel set for machine from Registry with one channel
add_test(NAME TestGetChannelSetForMachineFromRegistryWithOneChannel COMMAND ${THIS_TARGET} 344)
## Test check get channel set for machine from Registry with one channel
add_test(NAME TestGetChannelSetForMachineFromRegistryWithTwoChannels COMMAND ${THIS_TARGET} 345)
## Test check get channel set for machine from Registry with two nodes with channels
add_test(NAME TestGetChannelSetForMachineFromRegistryWithTwoNodesWithChannels COMMAND ${THIS_TARGET} 346)
## Test check get channel set with bad node name from Registry
add_test(NAME TestGetChannelSetWithBadNodeNameFromRegistry COMMAND ${THIS_TARGET} 347)
## Test check get channel set with bad machine name from Registry
add_test(NAME TestGetChannelSetWithBadMachineNameFromRegistry COMMAND ${THIS_TARGET} 348)

## Test check get channel details for node from empty Registry
add_test(NAME TestGetChannelDetailsFromEmptyRegistry COMMAND ${THIS_TARGET} 360)
## Test check get channel details for node from Registry with one channel
add_test(NAME TestGetChannelDetailsForNodeFromRegistryWithOneChannel COMMAND ${THIS_TARGET} 361)
## Test check get channel details for node from Registry with two channels
add_test(NAME TestGetChannelDetailsForNodeFromRegistryWithTwoChannels COMMAND ${THIS_TARGET} 362)
## Test check get channel details for nodes from Registry with two nodes with channels
add_test(NAME TestGetChannelDetailsForNodesFromRegistryWithTwoNodesWithChannels COMMAND ${THIS_TARGET} 363)
## Test check get channel details for machine from Registry with one channel
add_test(NAME TestGetChannelDetailsForMachineFromRegistryWithOneChannel COMMAND ${THIS_TARGET} 364)
## Test check get channel details for machine from Registry with two channels
add_test(NAME TestGetChannelDetailsForMachineFromRegistryWithTwoChannels COMMAND ${THIS_TARGET} 365)
## Test check get channel details for machine from Registry with two nodes with channels
add_test(NAME TestGetChannelDetailsForMachineFromRegistryWithTwoNodesWithChannels COMMAND ${THIS_TARGET} 366)
## Test check get channel details with bad node name from Registry
add_test(NAME TestGetChannelDetailsWithBadNodeNameFromRegistry COMMAND ${THIS_TARGET} 367)
## Test check get channel details with bad machine name from Registry
add_test(NAME TestGetChannelDetailsWithBadMachineNameFromRegistry COMMAND ${THIS_TARGET} 368)

## Test check count channel connections with empty Registry
add_test(NAME TestCountChannelConnectionsWithEmptyRegistry COMMAND ${THIS_TARGET} 380)
## Test check get channel connections for node from empty Registry
add_test(NAME TestGetChannelConnectionsFromEmptyRegistry COMMAND ${THIS_TARGET} 381)
## Test check count channels in Registry with one channel
add_test(NAME TestCountChannelConnectionsInRegistryWithOneChannel COMMAND ${THIS_TARGET} 382)
## Test check get channel connections for node from Registry with one channel
add_test(NAME TestGetChannelConnectionsForNodeFromRegistryWithOneChannel COMMAND ${THIS_TARGET} 383)
## Test check get channel connections for node from Registry with two channels
add_test(NAME TestGetChannelConnectionsForNodeFromRegistryWithTwoChannels COMMAND ${THIS_TARGET} 384)
## Test check get channel connections for nodes from Registry with two nodes with channels
add_test(NAME TestGetChannelConnectionsForNodesFromRegistryWithTwoNodesWithChannels COMMAND ${THIS_TARGET} 385)
## Test check get channel connections for machine from Registry with one channel
add_test(NAME TestGetChannelConnectionsForMachineFromRegistryWithOneChannel COMMAND ${THIS_TARGET} 386)
## Test check get channel connections for machine from Registry with two channels
add_test(NAME TestGetChannelConnectionsForMachineFromRegistryWithTwoChannels COMMAND ${THIS_TARGET} 387)
## Test check get channel connections for machine from Registry with two nodes with channels
add_test(NAME TestGetChannelConnectionsForMachineFromRegistryWithTwoNodesWithChannels COMMAND ${THIS_TARGET} 388)
## Test check get channel connections with bad node name from Registry
add_test(NAME TestGetChannelConnectionsWithBadNodeNameFromRegistry COMMAND ${THIS_TARGET} 389)
## Test check get channel connections with bad machine name from Registry
add_test(NAME TestGetChannelConnectionsWithBadMachineNameFromRegistry COMMAND ${THIS_TARGET} 390)

## Test check count channel connections with Registry with two connected channels
add_test(NAME TestCountChannelConnectionsWithRegistryWithTwoConnectedChannels COMMAND ${THIS_TARGET} 400)
## Test check connect channels with Registry with bad channel name
add_test(NAME TestConnectChannelsWithRegistryWithBadChannelName COMMAND ${THIS_TARGET} 401)
## Test check connect channels with Registry with bad node name
add_test(NAME TestConnectChannelsWithRegistryWithBadNodeName COMMAND ${THIS_TARGET} 402)
## Test check get channel connections for node from Registry with two connected channels
add_test(NAME TestGetChannelConnectionsForNodeFromRegistryWithTwoConnectedChannels COMMAND ${THIS_TARGET} 403)
## Test check get channel connections for machine from Registry with two connected channels
add_test(NAME TestGetChannelConnectionsForMachineFromRegistryWithTwoConnectedChannels COMMAND ${THIS_TARGET} 404)
## Test check get channel details for input channel on connection from Registry
add_test(NAME TestGetChannelDetailsForInputChannelFromRegistry COMMAND ${THIS_TARGET} 405)
## Test check get channel details for output channel on connection from Registry
add_test(NAME TestGetChannelDetailsForOutputChannelFromRegistry COMMAND ${THIS_TARGET} 406)
## Test check get channel details for input channel on connection from Registry with bad channel name
add_test(NAME TestGetChannelDetailsForInputChannelFromRegistryWithBadChannelName COMMAND ${THIS_TARGET} 407)
## Test check get channel details for output channel on connection from Registry with bad channel name
add_test(NAME TestGetChannelDetailsForOutputChannelFromRegistryWithBadChannelName COMMAND ${THIS_TARGET} 408)
